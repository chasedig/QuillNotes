<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolbar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yX8BISuB0Yl2zVUAAAAASUVORK5CYII=
</value>
  </data>
</root>